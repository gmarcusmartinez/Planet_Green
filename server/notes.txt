App Flow

Signup && Signin
- validation is ran before routehandler is hit
- sets token in request headers under req.session.jwt

getProducts
- currentUser middleware checks if req.session.jwt is defined 
 - if so set req.currentUser to verified jwtToken
 - whether or not it is defined proceed to route  

 getProduct/:id
- currentUser middleware checks if req.session.jwt is defined 
 - if so set req.currentUser to verified jwtToken
 - whether or not it is defined proceed to route handler 

 createProduct/
- currentUser middleware checks if req.session.jwt is defined 
 - if so set req.currentUser to verified jwtToken
-> requireAuth middleware stops request if req.currentUser is not defined 
-> authorize admin looks at the decoded token set to currentUser 
-> if user.role !== 'admin' stop request
-> if user.role === 'admin' proceed to route handler

 updateProduct/
- currentUser middleware checks if req.session.jwt is defined 
 - if so set req.currentUser to verified jwtToken
-> requireAuth middleware stops request if req.currentUser is not defined 
-> authorize admin looks at the decoded token set to currentUser 
-> if user.role !== 'admin' stop request
-> if user.role === 'admin' proceed to route handler

 deleteProduct/
- currentUser middleware checks if req.session.jwt is defined 
 - if so set req.currentUser to verified jwtToken
-> requireAuth middleware stops request if req.currentUser is not defined 
-> authorize admin looks at the decoded token set to currentUser 
-> if user.role !== 'admin' stop request
-> if user.role === 'admin' proceed to route handler

Signout
- removes token from header